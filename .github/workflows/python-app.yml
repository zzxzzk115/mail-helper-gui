# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    tags:
      - 'v*'

jobs:
  

  build-windows:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        ${{ github.workspace }}/setup_windows_env.bat
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Package with pyinstaller
      run: |
        ${{ github.workspace }}/build_windows.bat
    - uses: actions/upload-artifact@v3
      with:
        name: MailHelperGUI_Windows
        path: ${{ github.workspace }}/dist/MailHelperGUI.exe

  build-macos:

    runs-on: macOS-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pyinstaller
        bash ${{ github.workspace }}/setup_macos_env.sh
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Package with pyinstaller
      run: |
        bash ${{ github.workspace }}/build_macos.sh
    - uses: actions/upload-artifact@v3
      with:
        name: MailHelperGUI_MacOS
        path: ${{ github.workspace }}/dist/dmg/MailHelperGUI.dmg

  upload-release:
    needs: [build-windows, build-macos]

    runs-on: windows-latest
    
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: MailHelperGUI_Windows
    - uses: actions/download-artifact@v3
      with:
        name: MailHelperGUI_MacOS
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Windows Release Asset
      id: upload-release-asset-windows
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/MailHelperGUI.exe
        asset_name: MailHelperGUI_Windows.exe
        asset_content_type: application/exe
    - name: Upload MacOS Release Asset
      id: upload-release-asset-macos
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/MailHelperGUI.dmg
        asset_name: MailHelperGUI_MacOS_Installer.dmg
        asset_content_type: application/x-apple-diskimage